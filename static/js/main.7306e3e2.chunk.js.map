{"version":3,"sources":["Components/ContactsList/ContactList.module.css","Components/Filter/filter.module.css","styles/main.module.css","redux/phonebook-actions.js","Components/ContactsEditor/ContactsEditor.js","Components/ContactsList/Contact/Contact.js","Components/ContactsList/ContactList.js","Components/Filter/Filter.js","Components/Section/Section.js","Components/App/App.js","redux/phonebook-reducer.js","redux/store.js","index.js","Components/ContactsEditor/ContactsEditor.module.css","Components/ContactsList/Contact/Contact.module.css","Components/Section/Section.module.css"],"names":["module","exports","addContact","createAction","name","phone","payload","id","uuidv4","deleteContact","changeFilter","getVisibleContact","ContactsEditor","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContacts","onSubmit","this","className","styles","form__label","form__text","onChange","form__input","pattern","placeholder","type","form__btn","Component","connect","dispatch","Contact","onDeleteContact","contacts__item","contacts__text","onClick","contacts__btn","defaultProps","number","prototypes","PropTypes","string","func","isRequired","ContactList","contacts","contacts__list","length","map","key","contacts__zero","filter","contact","toLowerCase","includes","items","contactId","Filter","onChangeFilter","filter__label","filter__input","Section","children","title","section","theme","div","protoTypes","node","container","createReducer","console","log","some","alert","combineReducers","rootReducer","phonebookReducer","preloadedState","localStorage","getItem","JSON","parse","store","configureStore","reducer","devTools","process","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7306e3e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactList_contacts__list__1G8KJ\",\"contacts__zero\":\"ContactList_contacts__zero__rgsIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"filter_filter__label__2aokk\",\"filter__input\":\"filter_filter__input__1mjcM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"main_container__1J8gb\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('phoneBook/add', (name, phone) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      phone,\r\n    },\r\n  };\r\n});\r\nexport const deleteContact = createAction('phonebook/delete');\r\nexport const changeFilter = createAction('phonebook/changeFilter');\r\nexport const getVisibleContact = createAction('phonebook/getVisibleContact');\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/phonebook-actions';\r\nimport styles from './ContactsEditor.module.css';\r\nclass ContactsEditor extends Component {\r\n  state = {\r\n    name: '',\r\n    phone: '',\r\n  };\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContacts(this.state.name, this.state.phone);\r\n\r\n    this.setState({ name: '', phone: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form__label}>\r\n        <p className={styles.form__text}>Name</p>\r\n        <input\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          className={styles.form__input}\r\n        />\r\n        <p className={styles.form__text}>Phone</p>\r\n        <input\r\n          name=\"phone\"\r\n          value={this.state.phone}\r\n          pattern=\"0[0-9]{2}-[0-9]{2}-[0-9]{2}-[0-9]{3}\"\r\n          onChange={this.handleChange}\r\n          className={styles.form__input}\r\n          placeholder=\"0YY-XX-XX-XXX\"\r\n        />\r\n        <button type=\"submit\" className={styles.form__btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddContacts: (name, phone) => dispatch(addContact(name, phone)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactsEditor);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Contact.module.css\";\r\nconst Contact = ({ name, phone, id, onDeleteContact }) => (\r\n  <li className={styles.contacts__item}>\r\n    <p className={styles.contacts__text}>\r\n      {name} : {phone}\r\n    </p>\r\n    <button\r\n      type=\"button\"\r\n      onClick={onDeleteContact}\r\n      className={styles.contacts__btn}\r\n    >\r\n      Удалить\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContact.defaultProps = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nContact.prototypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/phonebook-actions';\r\nimport Contact from './Contact/Contact';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={styles.contacts__list}>\r\n    {contacts.length >= 1 ? (\r\n      contacts.map(({ id, name, phone }) => (\r\n        <Contact name={name} phone={phone} onDeleteContact={() => onDeleteContact(id)} key={id} />\r\n      ))\r\n    ) : (\r\n      <p className={styles.contacts__zero}>No contacts found</p>\r\n    )}\r\n  </ul>\r\n);\r\nContactList.defaultProps = {\r\n  onDeleteContact: () => {},\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      phone: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nconst getVisibleContact = (contacts, filter) => {\r\n  return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n};\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContact(items, filter),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: contactId => dispatch(deleteContact(contactId)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/phonebook-actions';\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <label className={styles.filter__label}>\r\n      Find contacts by name\r\n      <br />\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n        placeholder=\"Type name... \"\r\n        className={styles.filter__input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nFilter.defaultProps = {\r\n  onChangeFilter: () => {},\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\nconst mapStateToProps = state => ({ value: state.contacts.filter });\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeFilter: filter => dispatch(changeFilter(filter)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ children, title }) => (\r\n  <div className={styles.section}>\r\n    <h2 className={styles.theme}>{title}</h2>\r\n    <div className={styles.div}>{children}</div>\r\n  </div>\r\n);\r\n\r\nSection.protoTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport ContactsEditor from '../ContactsEditor/ContactsEditor';\r\nimport ContactsList from '../ContactsList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\nimport Section from '../Section/Section';\r\nimport styles from '../../styles/main.module.css';\r\nconst App = ({ contacts }) => {\r\n  // state = {\r\n  //   contacts: [],\r\n  //   filter: '',\r\n  // };\r\n  // componentDidMount() {\r\n  //   const persistedContacts = localStorage.getItem('contacts');\r\n  //   if (persistedContacts) {\r\n  //     this.setState({\r\n  //       contacts: JSON.parse(persistedContacts),\r\n  //     });\r\n  //   }\r\n  // }\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (prevState.contacts !== this.state.contacts) {\r\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n  //   }\r\n  // }\r\n  // addContact = (name, phone) => {\r\n  //   const { contacts } = this.state;\r\n  //   const contact = {\r\n  //     id: uuidv4(),\r\n  //     name,\r\n  //     phone,\r\n  //   };\r\n  //   if (contacts.some(contact => contact.name === name)) {\r\n  //     alert(`${name} is already in contacts`);\r\n  //   } else {\r\n  //     this.setState(prevState => {\r\n  //       return {\r\n  //         contacts: [...prevState.contacts, contact],\r\n  //       };\r\n  //     });\r\n  //   }\r\n  // };\r\n  // deleteContact = contactId => {\r\n  //   this.setState(prevState => ({\r\n  //     contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n  //   }));\r\n  // };\r\n  // changeFilter = filter => {\r\n  //   this.setState({ filter });\r\n  // };\r\n  // getVisibleContact = () => {\r\n  //   const { contacts, filter } = this.state;\r\n  //   return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n  // };\r\n\r\n  // const visibleContacts = this.getVisibleContact();\r\n  return (\r\n    <div className={styles.container}>\r\n      <Section title=\"Enter contact\">\r\n        <ContactsEditor />\r\n        {contacts.length > 1 && <Filter />}\r\n      </Section>\r\n      <Section title=\"Your contacts\">\r\n        <ContactsList />\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter, getVisibleContact } from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { type, payload }) => {\r\n    console.log(payload);\r\n    if (state.some(contact => contact.name === payload.name)) {\r\n      alert(`${payload.name} is already in contacts`);\r\n      return state;\r\n    } else return [...state, payload];\r\n  },\r\n  [deleteContact]: (state, { type, payload }) => state.filter(contact => contact.id !== payload),\r\n  [getVisibleContact]: (state, { type, payload }) =>\r\n    state.filter(contact => contact.name.toLowerCase().includes(payload.filter.toLowerCase())),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (state, { type, payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './phonebook-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phonebookReducer,\r\n});\r\nconst persistedStateItems = localStorage.getItem('items')\r\n  ? JSON.parse(localStorage.getItem('items'))\r\n  : [];\r\nconst preloadedState = {\r\n  contacts: {\r\n    items: persistedStateItems,\r\n\r\n    filter: '',\r\n  },\r\n};\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  preloadedState,\r\n});\r\nstore.subscribe(() => {\r\n  localStorage.setItem('items', JSON.stringify(store.getState().contacts.items));\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./Components/App/App\";\r\nimport store from \"./redux/store\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__label\":\"ContactsEditor_form__label__3cxK5\",\"form__input\":\"ContactsEditor_form__input__dbFqo\",\"form__text\":\"ContactsEditor_form__text__1WzXq\",\"form__btn\":\"ContactsEditor_form__btn__15x3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__text\":\"Contact_contacts__text__33AGs\",\"contacts__item\":\"Contact_contacts__item__20ekS\",\"contacts__btn\":\"Contact_contacts__btn__fjklh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme\":\"Section_theme__1WBc3\",\"section\":\"Section_section__3wSNJ\"};"],"sourceRoot":""}